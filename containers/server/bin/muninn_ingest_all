#! /bin/bash
SECONDS=0
LOG="/home/muninn/data/ingest_all_$(date +%Y-%m-%dT%H_%M_%S%Z).log"
echo "begin at $(date)" >> "$LOG"

DATA_DIR='/home/muninn/data'

# bjorn-general outputs
BJORN_GENERAL_OUTPUT_ARCHIVE="$DATA_DIR/outputs.all.zip"
ARCHIVE_DEST_DIR="$DATA_DIR/outputs.all"

# b/c the archive is a compressed directory, we have to go down another layer
ARCHIVE_DEST_SUBDIR="$ARCHIVE_DEST_DIR/outputs"

SAMPLES_FILE="metadata/metadata.tsv"
VARIANTS_FILE="intrahost_dms/combined_variants.tsv"
MUTATIONS_FILE="mutations/mutations.tsv"
HA_DMS_FILE="dms/dms_HA.tsv"

# these are not part of the output from bjorn-general
EVE_FILE="eve_dms_data.csv"
GENOFLU_FILE="genoflu_results.tsv"
FREYJA_DEMIXED_DIR="demixed"
FLUMUT_FILE="flumut_annotations.tsv"

# Debug output files for ref conflicts
AMINO_SUB_REF_CONFLICTS_FILE="/tmp/amino_sub_ref_conflicts.csv"
ALLELE_REF_CONFLICTS_FILE="/tmp/allele_ref_conflicts.csv"
TRANSLATIONS_REF_CONFLICTS_FILE="/tmp/translations_ref_conflicts.csv"

# unpack zip file
if [[ -d "$ARCHIVE_DEST_DIR" ]]; then
  rm -r "$ARCHIVE_DEST_DIR"
fi

if [[ ! -f "$BJORN_GENERAL_OUTPUT_ARCHIVE" ]]; then
  echo "bjorn-general outputs archive not found: $BJORN_GENERAL_OUTPUT_ARCHIVE" >> "$LOG"
  exit 1
fi

unzip -d "$ARCHIVE_DEST_DIR" "$BJORN_GENERAL_OUTPUT_ARCHIVE"

{
  # ingest bjorn-general outputs
  python3 -u runinserts.py "$ARCHIVE_DEST_SUBDIR/$SAMPLES_FILE" --format samples_tsv
  python3 -u runinserts.py \
  "$ARCHIVE_DEST_SUBDIR/$VARIANTS_FILE" \
  "$ARCHIVE_DEST_SUBDIR/$MUTATIONS_FILE" \
  --format variants_mutations_combined_tsv
  python3 -u runinserts.py "$ARCHIVE_DEST_SUBDIR/$HA_DMS_FILE" --format ha_dms_tsv

  # ingest random other outputs
  python3 -u runinserts.py "$DATA_DIR/$EVE_FILE" --format eve_dms_csv
  python3 -u runinserts.py "$DATA_DIR/$GENOFLU_FILE" --format genoflu_lineages
  python3 -u runinserts.py "$DATA_DIR/$FREYJA_DEMIXED_DIR" --format freyja_demixed
  python3 -u runinserts.py "$DATA_DIR/$FLUMUT_FILE" --format flumut_tsv
} &>> "$LOG"

# Copying over some debug files
if [[ -f "$ALLELE_REF_CONFLICTS_FILE" ]]; then
  cp "$ALLELE_REF_CONFLICTS_FILE" "$DATA_DIR"
fi
if [[ -f "$AMINO_SUB_REF_CONFLICTS_FILE" ]]; then
  cp "$AMINO_SUB_REF_CONFLICTS_FILE" "$DATA_DIR"
fi
if [[ -f "$TRANSLATIONS_REF_CONFLICTS_FILE" ]]; then
  cp "$TRANSLATIONS_REF_CONFLICTS_FILE" "$DATA_DIR"
fi

echo "end at $(date)" >> "$LOG"
ELAPSED="Elapsed: $((SECONDS / 3600))hrs $(((SECONDS / 60) % 60))min $((SECONDS % 60))sec"
echo "$ELAPSED" >> "$LOG"